import{h as V,i as R,c as F,e as $,g as B,b as D,d as M}from"./styled-d729a487.js";import{n as G,b as k,o as v,p,q as N,t as _,v as E,r as d,_ as O,j as U,w as h}from"./app-a381c4b7.js";import{e as A}from"./Typography-ee46d8d6.js";const L=V(),q=L,I=["component","direction","spacing","divider","children","className","useFlexGap"],W=G(),z=q("div",{name:"MuiStack",slot:"Root",overridesResolver:(e,s)=>s.root});function H(e){return R({props:e,name:"MuiStack",defaultTheme:W})}function J(e,s){const n=d.Children.toArray(e).filter(Boolean);return n.reduce((c,a,t)=>(c.push(a),t<n.length-1&&c.push(d.cloneElement(s,{key:`separator-${t}`})),c),[])}const K=e=>({row:"Left","row-reverse":"Right",column:"Top","column-reverse":"Bottom"})[e],Q=({ownerState:e,theme:s})=>{let n=k({display:"flex",flexDirection:"column"},v({theme:s},p({values:e.direction,breakpoints:s.breakpoints.values}),c=>({flexDirection:c})));if(e.spacing){const c=N(s),a=Object.keys(s.breakpoints.values).reduce((o,r)=>((typeof e.spacing=="object"&&e.spacing[r]!=null||typeof e.direction=="object"&&e.direction[r]!=null)&&(o[r]=!0),o),{}),t=p({values:e.direction,base:a}),m=p({values:e.spacing,base:a});typeof t=="object"&&Object.keys(t).forEach((o,r,i)=>{if(!t[o]){const u=r>0?t[i[r-1]]:"column";t[o]=u}}),n=_(n,v({theme:s},m,(o,r)=>e.useFlexGap?{gap:h(c,o)}:{"& > :not(style) ~ :not(style)":{margin:0,[`margin${K(r?t[r]:e.direction)}`]:h(c,o)}}))}return n=E(s.breakpoints,n),n};function X(e={}){const{createStyledComponent:s=z,useThemeProps:n=H,componentName:c="MuiStack"}=e,a=()=>$({root:["root"]},o=>B(c,o),{}),t=s(Q);return d.forwardRef(function(o,r){const i=n(o),l=A(i),{component:u="div",direction:x="column",spacing:S=0,divider:y,children:g,className:P,useFlexGap:b=!1}=l,j=O(l,I),C={direction:x,spacing:S,useFlexGap:b},T=a();return U(t,k({as:u,ownerState:C,ref:r,className:F(T.root,P)},j,{children:y?J(g,y):g}))})}const Y=X({createStyledComponent:D("div",{name:"MuiStack",slot:"Root",overridesResolver:(e,s)=>s.root}),useThemeProps:e=>M({props:e,name:"MuiStack"})}),se=Y;export{se as S,q as s};
